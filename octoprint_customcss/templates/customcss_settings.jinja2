<script>
  (async () => {
    let themes = await (await fetch("https://bitwiser.in/monaco-themes/themes/themelist.json")).json();
    let drop = document.querySelector('#settings_plugin_customcss #themes')
    let gist = document.querySelector('#settings_plugin_customcss #gistid')
    let len = Object.keys(themes).length

    for (var i = 0; i < len; i++){
      var option = document.createElement("option");
      option.innerHTML = Object.values(themes)[i]
      option.value = Object.keys(themes)[i]
      drop.options.add(option)
    }
    window._loadedThemes = {};
    window.setTheme = async (x, y) => {
      if (!x.startsWith('vs') && !window._loadedThemes[x]) window._loadedThemes[x] = monaco.editor.defineTheme(x, await (await fetch(`https://raw.githubusercontent.com/brijeshb42/monaco-themes/master/themes/${y}.json`)).json());
      monaco.editor.setTheme(x);
    };
    
    drop.onchange = function(){
       window.setTheme(drop.value,drop.options[drop.selectedIndex].text)
    }
    gist.onchange = async function(){
      document.querySelector("style#gist-customcss").textContent=Object.values(JSON.parse(await( await fetch("https://api.github.com/gists/"+document.querySelector("#settings_plugin_customcss #gistid").value)).text()).files)[0].content
    }

  })();
</script>
<script>
(async () => {
    const imp = async url => eval(await (await fetch(url)).text());
    await imp('https://unpkg.com/@monaco-editor/loader@latest/lib/umd/monaco-loader.min.js');
    let controlsDom = document.querySelector("#settings_plugin_customcss .controls");
    let textareaDom = controlsDom.querySelector("textarea");
    let drop = document.querySelector('#settings_plugin_customcss #themes')
    monaco_loader.config({paths: { vs: "https://unpkg.com/monaco-editor@latest/min/vs" }});
    monaco_loader.init().then((monaco) => {
      window.editor = monaco.editor.create(
        controlsDom,
        { language: "css",
        value: textareaDom.value, 
        theme: "vs-dark",
        minimap: {enabled: false},
        scrollBeyondLastLine: false 
        }
      );
      window.editor.onDidChangeModelContent((event) => {
        textareaDom.value = editor.getValue()
        textareaDom.dispatchEvent(new Event('change'));
      });;
    });
    document.querySelector('li#settings_plugin_customcss_link').onclick = async function(){
        await new Promise(r => setTimeout(r, 100));
        window.editor.setValue(textareaDom.value);
        window.editor.getModel().updateOptions({ tabSize: 2 });
        window.editor.layout();
        window.setTheme(drop.value,drop.options[drop.selectedIndex].text)
    }
})();
</script>
<form class="form-vertical">
  <div class="control-group">

    <div class="header">
      <span class="control-label">Custom CSS</span>
      <div class="settings">
        <input id="gistid" type="text" data-bind="textInput: settings.plugins.customcss.gist_id" placeholder="Gist ID">
        <select id="themes" data-bind="value: settings.plugins.customcss.monacotheme">
          <option value="vs-light">VS Light</option>
          <option value="vs-dark">VS Dark</option>
        </select>
        <button type="button" onclick="editor.getAction('editor.action.formatDocument').run();">Format</button>
      </div>
    </div>

    <div class="controls">
      <textarea rows="8" class="block monospace" height="100%" data-bind="value: settings.plugins.customcss.css" style="display:none"></textarea>
    </div>
  </div>
</form>


